// Spank
//
// http://nurd.se/~noname/spank
//
// File authors:
// 	Fredrik Hultin
//
// License: GPLv2

#include "exportshell.h"

#include <fstream>
#include <string>

#include "log.h"
#include "system.h"
#include "settings.h"
#include "tools.h"

bool ExportShell::exp(std::string fileName)
{
	COMPILER->checkLibs();
	std::vector<CList> cList = COMPILER->compileList(false);

	LOG("Shell script exporter", LOG_DEBUG);
	LOG("Number of source files: " << cList.size(), LOG_DEBUG);

	if(fileName == ""){
		fileName = "build.sh";
	} 

	std::ofstream file(fileName.c_str());

	if(!file.good()){
		file.close();
		return false;
	}

	file << "#!/bin/sh" << std::endl;
	file << "# This file was automatically generated by " SPANK_NAME << " " << SPANK_VERSION << std::endl;
	file << "# See " << SPANK_HOMEPAGE << " for more information" << std::endl;
	file << std::endl;


	// Check if the temp directory exists, create it if not.
	file << "if [ ! -d '" << FILES->getTmpDir() << "' ]" << std::endl;
	file << "then" << std::endl;
	file << "\tmkdir -p '" << FILES->getTmpDir() << "'" << std::endl;
	file << "fi" << std::endl;

	// Check if the temp directory exists (has been created), if so, then proceed

	file << "if [ -d " << FILES->getTmpDir() << " ]" << std::endl;
	file << "then" << std::endl;

	// Compiliation list

	for(int i=0; i < (int)cList.size(); i++){
		file << "echo \"[ " << ((int)(((double)(i+1) / (double)cList.size() * 100 ))) << " %] " << Tools::stripSrcDir(cList.at(i).src) << "\"" << std::endl;
		file << cList.at(i).call.c_str() << std::endl;
	}

	// Linker command
	file << std::endl;
	file << "echo \"Linking...\"" << std::endl;
	file << COMPILER->getLdCall(false) << std::endl;
	file << std::endl;

	file << "else" << std::endl;
	file << "\techo \"Couldn't create temp directory\"" << std::endl;
	file << "fi" << std::endl;

	file.close();

	return true;
}

